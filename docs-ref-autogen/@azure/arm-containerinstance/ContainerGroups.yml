### YamlMime:TSType
name: ContainerGroups
uid: '@azure/arm-containerinstance.ContainerGroups'
package: '@azure/arm-containerinstance'
summary: Interface representing a ContainerGroups.
fullName: ContainerGroups
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, ContainerGroup,
      ContainerGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdate'
    package: '@azure/arm-containerinstance'
    summary: Create or update container groups with specified configurations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        containerGroupName: string, containerGroup: ContainerGroup, options?:
        ContainerGroupsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ContainerGroupsCreateOrUpdateResponse>,
        ContainerGroupsCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: containerGroup
          type: <xref uid="@azure/arm-containerinstance.ContainerGroup" />
          description: The properties of the container group to be created or updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsCreateOrUpdateResponse"
          />&gt;, <xref
          uid="@azure/arm-containerinstance.ContainerGroupsCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, ContainerGroup,
      ContainerGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdateAndWait'
    package: '@azure/arm-containerinstance'
    summary: Create or update container groups with specified configurations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        containerGroupName: string, containerGroup: ContainerGroup, options?:
        ContainerGroupsCreateOrUpdateOptionalParams):
        Promise<ContainerGroupsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: containerGroup
          type: <xref uid="@azure/arm-containerinstance.ContainerGroup" />
          description: The properties of the container group to be created or updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsCreateOrUpdateResponse"
          />&gt;
  - name: 'beginDelete(string, string, ContainerGroupsDeleteOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginDelete'
    package: '@azure/arm-containerinstance'
    summary: >-
      Delete the specified container group in the specified subscription and
      resource group. The operation

      does not delete other resources provided by the user, such as volumes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, containerGroupName:
        string, options?: ContainerGroupsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<ContainerGroupsDeleteResponse>,
        ContainerGroupsDeleteResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsDeleteResponse"
          />&gt;, <xref
          uid="@azure/arm-containerinstance.ContainerGroupsDeleteResponse"
          />&gt;&gt;
  - name: 'beginDeleteAndWait(string, string, ContainerGroupsDeleteOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginDeleteAndWait'
    package: '@azure/arm-containerinstance'
    summary: >-
      Delete the specified container group in the specified subscription and
      resource group. The operation

      does not delete other resources provided by the user, such as volumes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        containerGroupName: string, options?:
        ContainerGroupsDeleteOptionalParams):
        Promise<ContainerGroupsDeleteResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsDeleteResponse"
          />&gt;
  - name: 'beginRestart(string, string, ContainerGroupsRestartOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginRestart'
    package: '@azure/arm-containerinstance'
    summary: >-
      Restarts all containers in a container group in place. If container image
      has updates, new image

      will be downloaded.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, containerGroupName:
        string, options?: ContainerGroupsRestartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsRestartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginRestartAndWait(string, string, ContainerGroupsRestartOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginRestartAndWait'
    package: '@azure/arm-containerinstance'
    summary: >-
      Restarts all containers in a container group in place. If container image
      has updates, new image

      will be downloaded.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginRestartAndWait(resourceGroupName: string,
        containerGroupName: string, options?:
        ContainerGroupsRestartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsRestartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginStart(string, string, ContainerGroupsStartOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginStart'
    package: '@azure/arm-containerinstance'
    summary: >-
      Starts all containers in a container group. Compute resources will be
      allocated and billing will

      start.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, containerGroupName:
        string, options?: ContainerGroupsStartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsStartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginStartAndWait(string, string, ContainerGroupsStartOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.beginStartAndWait'
    package: '@azure/arm-containerinstance'
    summary: >-
      Starts all containers in a container group. Compute resources will be
      allocated and billing will

      start.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string,
        containerGroupName: string, options?:
        ContainerGroupsStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsStartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, ContainerGroupsGetOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.get'
    package: '@azure/arm-containerinstance'
    summary: >-
      Gets the properties of the specified container group in the specified
      subscription and resource

      group. The operation returns the properties of each container group
      including containers, image

      registry credentials, restart policy, IP address type, OS type, state, and
      volumes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, containerGroupName: string,
        options?: ContainerGroupsGetOptionalParams):
        Promise<ContainerGroupsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsGetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsGetResponse" />&gt;
  - name: >-
      getOutboundNetworkDependenciesEndpoints(string, string,
      ContainerGroupsGetOutboundNetworkDependenciesEndpointsOptionalParams)
    uid: >-
      @azure/arm-containerinstance.ContainerGroups.getOutboundNetworkDependenciesEndpoints
    package: '@azure/arm-containerinstance'
    summary: >-
      Gets all the network dependencies for this container group to allow
      complete control of network

      setting and configuration. For container groups, this will always be an
      empty list.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOutboundNetworkDependenciesEndpoints(resourceGroupName:
        string, containerGroupName: string, options?:
        ContainerGroupsGetOutboundNetworkDependenciesEndpointsOptionalParams):
        Promise<ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsGetOutboundNetworkDependenciesEndpointsOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsGetOutboundNetworkDependenciesEndpointsResponse"
          />&gt;
  - name: list(ContainerGroupsListOptionalParams)
    uid: '@azure/arm-containerinstance.ContainerGroups.list'
    package: '@azure/arm-containerinstance'
    summary: >-
      Get a list of container groups in the specified subscription. This
      operation returns properties of

      each container group including containers, image registry credentials,
      restart policy, IP address

      type, OS type, state, and volumes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ContainerGroupsListOptionalParams):
        PagedAsyncIterableIterator<ContainerGroup>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsListOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroup" />&gt;
  - name: >-
      listByResourceGroup(string,
      ContainerGroupsListByResourceGroupOptionalParams)
    uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup'
    package: '@azure/arm-containerinstance'
    summary: >-
      Get a list of container groups in a specified subscription and resource
      group. This operation

      returns properties of each container group including containers, image
      registry credentials, restart

      policy, IP address type, OS type, state, and volumes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ContainerGroupsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<ContainerGroup>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsListByResourceGroupOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroup" />&gt;
  - name: 'stop(string, string, ContainerGroupsStopOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.stop'
    package: '@azure/arm-containerinstance'
    summary: >-
      Stops all containers in a container group. Compute resources will be
      deallocated and billing will

      stop.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stop(resourceGroupName: string, containerGroupName: string,
        options?: ContainerGroupsStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsStopOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'update(string, string, Resource, ContainerGroupsUpdateOptionalParams)'
    uid: '@azure/arm-containerinstance.ContainerGroups.update'
    package: '@azure/arm-containerinstance'
    summary: Updates container group tags with specified values.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, containerGroupName: string,
        resource: Resource, options?: ContainerGroupsUpdateOptionalParams):
        Promise<ContainerGroupsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: containerGroupName
          type: string
          description: The name of the container group.
        - id: resource
          type: <xref uid="@azure/arm-containerinstance.Resource" />
          description: The container group resource with just the tags to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerinstance.ContainerGroupsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerinstance.ContainerGroupsUpdateResponse"
          />&gt;
